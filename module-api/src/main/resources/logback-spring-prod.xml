<included>
  <property resource="logback-variables.properties"/>
  <appender name="REQUEST1" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <file>${LOG_DIR}/request1.log</file>
    <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
      <fileNamePattern>${LOG_DIR}/archive/request1.%d{yyy-MM-dd}_%i.log
      </fileNamePattern><!-- 로그파일 이름 규칙 -->
      <maxFileSize>10KB</maxFileSize><!-- 로그파일 최대 크기 -->
      <maxHistory>30</maxHistory><!-- 로그파일 최대 보관주기(단위:일) -->
    </rollingPolicy>
    <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
      <pattern>
        [REQUEST1] ${LOG_PATTERN}
      </pattern>
      <outputPatternAsHeader>true</outputPatternAsHeader> <!-- 파일 처음부분에 어떤 형식으로 로그 생성하는지 나타냄 -->
    </encoder>
  </appender>

  <appender name="REQUEST2" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <file>${LOG_DIR}/request2.log</file>
    <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
      <fileNamePattern>${LOG_DIR}/archive/request2.%d{yyy-MM-dd}_%i.log
      </fileNamePattern><!-- 로그파일 이름 규칙 -->
      <maxFileSize>10KB</maxFileSize><!-- 로그파일 최대 크기 -->
      <maxHistory>30</maxHistory><!-- 로그파일 최대 보관주기(단위:일) -->
    </rollingPolicy>
    <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
      <pattern>
        [REQUEST2] ${LOG_PATTERN}
      </pattern>
      <outputPatternAsHeader>true</outputPatternAsHeader> <!-- 파일 처음부분에 어떤 형식으로 로그 생성하는지 나타냄 -->
    </encoder>
  </appender>

  <appender name="MDC" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <file>${LOG_DIR}/mdc.log</file>
    <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
      <fileNamePattern>${LOG_DIR}/archive/mdc.%d{yyy-MM-dd}_%i.log
      </fileNamePattern><!-- 로그파일 이름 규칙 -->
      <maxFileSize>10KB</maxFileSize><!-- 로그파일 최대 크기 -->
      <maxHistory>30</maxHistory><!-- 로그파일 최대 보관주기(단위:일) -->
    </rollingPolicy>
    <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
      <pattern><!--%X{키}를 통해 MDC 안의 value를 찾음-->
        [MDC] %X{job}%n
      </pattern>
      <outputPatternAsHeader>true</outputPatternAsHeader> <!-- 파일 처음부분에 어떤 형식으로 로그 생성하는지 나타냄 -->
    </encoder>
  </appender>

  <appender name="ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <file>${LOG_DIR}/error.log</file>
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
      <level>error</level>
      <onMatch>ACCEPT</onMatch>
      <onMismatch>DENY</onMismatch>
    </filter>
    <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
      <fileNamePattern>${LOG_DIR}/archive/error.%d{yyy-MM-dd}_%i.log
      </fileNamePattern><!-- 로그파일 이름 규칙 -->
      <maxFileSize>10KB</maxFileSize><!-- 로그파일 최대 크기 -->
      <maxHistory>30</maxHistory><!-- 로그파일 최대 보관주기(단위:일) -->
    </rollingPolicy>
    <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
      <pattern><!--%X{키}를 통해 MDC 안의 value를 찾음-->
        [ERROR] ${LOG_PATTERN}
      </pattern>
      <outputPatternAsHeader>true</outputPatternAsHeader> <!-- 파일 처음부분에 어떤 형식으로 로그 생성하는지 나타냄 -->
    </encoder>
  </appender>

  <appender name="WARN" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <file>${LOG_DIR}/warn.log</file>
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
      <level>warn</level>
      <onMatch>ACCEPT</onMatch>
      <onMismatch>DENY</onMismatch>
    </filter>
    <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
      <fileNamePattern>${LOG_DIR}/archive/warn.%d{yyy-MM-dd}_%i.log
      </fileNamePattern><!-- 로그파일 이름 규칙 -->
      <maxFileSize>10KB</maxFileSize><!-- 로그파일 최대 크기 -->
      <maxHistory>30</maxHistory><!-- 로그파일 최대 보관주기(단위:일) -->
    </rollingPolicy>
    <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
      <pattern><!--%X{키}를 통해 MDC 안의 value를 찾음-->
        [ERROR] ${LOG_PATTERN}
      </pattern>
      <outputPatternAsHeader>true</outputPatternAsHeader> <!-- 파일 처음부분에 어떤 형식으로 로그 생성하는지 나타냄 -->
    </encoder>
  </appender>
  <root level="INFO">
    <!--    <appender-ref ref="REQUEST1"/>-->
    <!--    <appender-ref ref="REQUEST2"/>-->
    <!--    <appender-ref ref="MDC"/>-->
    <appender-ref ref="ERROR"/>
    <appender-ref ref="WARN"/>
  </root>
</included>